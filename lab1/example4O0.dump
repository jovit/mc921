
example4O0:	file format Mach-O 64-bit x86-64

Disassembly of section __TEXT,__text:
__text:
100000ef0:	55 	pushq	%rbp
100000ef1:	48 89 e5 	movq	%rsp, %rbp
100000ef4:	48 83 ec 30 	subq	$48, %rsp
100000ef8:	c7 45 fc 00 00 00 00 	movl	$0, -4(%rbp)
100000eff:	48 8d 3d a6 00 00 00 	leaq	166(%rip), %rdi
100000f06:	48 8d 75 f8 	leaq	-8(%rbp), %rsi
100000f0a:	b0 00 	movb	$0, %al
100000f0c:	e8 71 00 00 00 	callq	113 <dyld_stub_binder+0x100000f82>
100000f11:	48 8d 3d 94 00 00 00 	leaq	148(%rip), %rdi
100000f18:	48 8d 75 f4 	leaq	-12(%rbp), %rsi
100000f1c:	89 45 d8 	movl	%eax, -40(%rbp)
100000f1f:	b0 00 	movb	$0, %al
100000f21:	e8 5c 00 00 00 	callq	92 <dyld_stub_binder+0x100000f82>
100000f26:	c7 45 f0 14 00 00 00 	movl	$20, -16(%rbp)
100000f2d:	8b 4d f8 	movl	-8(%rbp), %ecx
100000f30:	03 4d f0 	addl	-16(%rbp), %ecx
100000f33:	89 4d ec 	movl	%ecx, -20(%rbp)
100000f36:	8b 4d ec 	movl	-20(%rbp), %ecx
100000f39:	0f af 4d f4 	imull	-12(%rbp), %ecx
100000f3d:	89 4d e8 	movl	%ecx, -24(%rbp)
100000f40:	8b 4d e8 	movl	-24(%rbp), %ecx
100000f43:	83 c1 05 	addl	$5, %ecx
100000f46:	89 4d e4 	movl	%ecx, -28(%rbp)
100000f49:	8b 4d e4 	movl	-28(%rbp), %ecx
100000f4c:	c1 e1 01 	shll	$1, %ecx
100000f4f:	89 4d e0 	movl	%ecx, -32(%rbp)
100000f52:	8b 4d e0 	movl	-32(%rbp), %ecx
100000f55:	83 c1 01 	addl	$1, %ecx
100000f58:	89 4d dc 	movl	%ecx, -36(%rbp)
100000f5b:	8b 75 dc 	movl	-36(%rbp), %esi
100000f5e:	48 8d 3d 47 00 00 00 	leaq	71(%rip), %rdi
100000f65:	89 45 d4 	movl	%eax, -44(%rbp)
100000f68:	b0 00 	movb	$0, %al
100000f6a:	e8 0d 00 00 00 	callq	13 <dyld_stub_binder+0x100000f7c>
100000f6f:	31 c9 	xorl	%ecx, %ecx
100000f71:	89 45 d0 	movl	%eax, -48(%rbp)
100000f74:	89 c8 	movl	%ecx, %eax
100000f76:	48 83 c4 30 	addq	$48, %rsp
100000f7a:	5d 	popq	%rbp
100000f7b:	c3 	retq

_main:
100000ef0:	55 	pushq	%rbp
100000ef1:	48 89 e5 	movq	%rsp, %rbp
100000ef4:	48 83 ec 30 	subq	$48, %rsp
100000ef8:	c7 45 fc 00 00 00 00 	movl	$0, -4(%rbp)
100000eff:	48 8d 3d a6 00 00 00 	leaq	166(%rip), %rdi
100000f06:	48 8d 75 f8 	leaq	-8(%rbp), %rsi
100000f0a:	b0 00 	movb	$0, %al
100000f0c:	e8 71 00 00 00 	callq	113 <dyld_stub_binder+0x100000f82>
100000f11:	48 8d 3d 94 00 00 00 	leaq	148(%rip), %rdi
100000f18:	48 8d 75 f4 	leaq	-12(%rbp), %rsi
100000f1c:	89 45 d8 	movl	%eax, -40(%rbp)
100000f1f:	b0 00 	movb	$0, %al
100000f21:	e8 5c 00 00 00 	callq	92 <dyld_stub_binder+0x100000f82>
100000f26:	c7 45 f0 14 00 00 00 	movl	$20, -16(%rbp)
100000f2d:	8b 4d f8 	movl	-8(%rbp), %ecx
100000f30:	03 4d f0 	addl	-16(%rbp), %ecx
100000f33:	89 4d ec 	movl	%ecx, -20(%rbp)
100000f36:	8b 4d ec 	movl	-20(%rbp), %ecx
100000f39:	0f af 4d f4 	imull	-12(%rbp), %ecx
100000f3d:	89 4d e8 	movl	%ecx, -24(%rbp)
100000f40:	8b 4d e8 	movl	-24(%rbp), %ecx
100000f43:	83 c1 05 	addl	$5, %ecx
100000f46:	89 4d e4 	movl	%ecx, -28(%rbp)
100000f49:	8b 4d e4 	movl	-28(%rbp), %ecx
100000f4c:	c1 e1 01 	shll	$1, %ecx
100000f4f:	89 4d e0 	movl	%ecx, -32(%rbp)
100000f52:	8b 4d e0 	movl	-32(%rbp), %ecx
100000f55:	83 c1 01 	addl	$1, %ecx
100000f58:	89 4d dc 	movl	%ecx, -36(%rbp)
100000f5b:	8b 75 dc 	movl	-36(%rbp), %esi
100000f5e:	48 8d 3d 47 00 00 00 	leaq	71(%rip), %rdi
100000f65:	89 45 d4 	movl	%eax, -44(%rbp)
100000f68:	b0 00 	movb	$0, %al
100000f6a:	e8 0d 00 00 00 	callq	13 <dyld_stub_binder+0x100000f7c>
100000f6f:	31 c9 	xorl	%ecx, %ecx
100000f71:	89 45 d0 	movl	%eax, -48(%rbp)
100000f74:	89 c8 	movl	%ecx, %eax
100000f76:	48 83 c4 30 	addq	$48, %rsp
100000f7a:	5d 	popq	%rbp
100000f7b:	c3 	retq
Disassembly of section __TEXT,__stubs:
__stubs:
100000f7c:	ff 25 8e 00 00 00 	jmpq	*142(%rip)
100000f82:	ff 25 90 00 00 00 	jmpq	*144(%rip)
Disassembly of section __TEXT,__stub_helper:
__stub_helper:
100000f88:	4c 8d 1d 79 00 00 00 	leaq	121(%rip), %r11
100000f8f:	41 53 	pushq	%r11
100000f91:	ff 25 69 00 00 00 	jmpq	*105(%rip)
100000f97:	90 	nop
100000f98:	68 00 00 00 00 	pushq	$0
100000f9d:	e9 e6 ff ff ff 	jmp	-26 <__stub_helper>
100000fa2:	68 0e 00 00 00 	pushq	$14
100000fa7:	e9 dc ff ff ff 	jmp	-36 <__stub_helper>
Disassembly of section __TEXT,__cstring:
__cstring:
100000fac:	25  <unknown>
100000fad:	64 00  <unknown>
Disassembly of section __TEXT,__unwind_info:
__unwind_info:
100000fb0:	01 00 	addl	%eax, (%rax)
100000fb2:	00 00 	addb	%al, (%rax)
100000fb4:	1c 00 	sbbb	$0, %al
100000fb6:	00 00 	addb	%al, (%rax)
100000fb8:	00 00 	addb	%al, (%rax)
100000fba:	00 00 	addb	%al, (%rax)
100000fbc:	1c 00 	sbbb	$0, %al
100000fbe:	00 00 	addb	%al, (%rax)
100000fc0:	00 00 	addb	%al, (%rax)
100000fc2:	00 00 	addb	%al, (%rax)
100000fc4:	1c 00 	sbbb	$0, %al
100000fc6:	00 00 	addb	%al, (%rax)
100000fc8:	02 00 	addb	(%rax), %al
100000fca:	00 00 	addb	%al, (%rax)
100000fcc:	f0 	lock
100000fcd:	0e  <unknown>
100000fce:	00 00 	addb	%al, (%rax)
100000fd0:	34 00 	xorb	$0, %al
100000fd2:	00 00 	addb	%al, (%rax)
100000fd4:	34 00 	xorb	$0, %al
100000fd6:	00 00 	addb	%al, (%rax)
100000fd8:	7d 0f 	jge	15 <__unwind_info+0x39>
100000fda:	00 00 	addb	%al, (%rax)
100000fdc:	00 00 	addb	%al, (%rax)
100000fde:	00 00 	addb	%al, (%rax)
100000fe0:	34 00 	xorb	$0, %al
100000fe2:	00 00 	addb	%al, (%rax)
100000fe4:	03 00 	addl	(%rax), %eax
100000fe6:	00 00 	addb	%al, (%rax)
100000fe8:	0c 00 	orb	$0, %al
100000fea:	01 00 	addl	%eax, (%rax)
100000fec:	10 00 	adcb	%al, (%rax)
100000fee:	01 00 	addl	%eax, (%rax)
100000ff0:	00 00 	addb	%al, (%rax)
100000ff2:	00 00 	addb	%al, (%rax)
100000ff4:	00 00 	addb	%al, (%rax)
100000ff6:	00 01 	addb	%al, (%rcx)
Disassembly of section __DATA,__nl_symbol_ptr:
__nl_symbol_ptr:
100001000:	00 00 	addb	%al, (%rax)
100001002:	00 00 	addb	%al, (%rax)
100001004:	00 00 	addb	%al, (%rax)
100001006:	00 00 	addb	%al, (%rax)
100001008:	00 00 	addb	%al, (%rax)
10000100a:	00 00 	addb	%al, (%rax)
10000100c:	00 00 	addb	%al, (%rax)
10000100e:	00 00 	addb	%al, (%rax)
Disassembly of section __DATA,__la_symbol_ptr:
__la_symbol_ptr:
100001010:	98 	cwtl
100001011:	0f 00 00 	sldtw	(%rax)
100001014:	01 00 	addl	%eax, (%rax)
100001016:	00 00 	addb	%al, (%rax)
100001018:	a2  <unknown>
100001019:	0f 00 00 	sldtw	(%rax)
10000101c:	01 00 	addl	%eax, (%rax)
10000101e:	00 00 	addb	%al, (%rax)
